<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Delta Operational Metrics Store (DeltaOMS)</title>
    <link>https://databrickslabs.github.io/delta-oms/</link>
    <description>Recent content on Delta Operational Metrics Store (DeltaOMS)</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 04 Aug 2021 14:50:11 -0400</lastBuildDate><atom:link href="https://databrickslabs.github.io/delta-oms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>General</title>
      <link>https://databrickslabs.github.io/delta-oms/faq/general/</link>
      <pubDate>Wed, 04 Aug 2021 14:50:11 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/faq/general/</guid>
      <description>General Q. What is Delta Operational Metrics Store ?
Delta Operational metrics store (DeltaOMS) is a solution/framework for automated collection and tracking of Delta commit logs and other future operational metrics from Delta Lake, build a centralized repository for Delta Lake operational statistics and simplify analysis across the entire data lake.
The solution can be easily enabled and configured to start capturing the operational metrics into a centralized repository on the data lake.</description>
    </item>
    
    <item>
      <title>Configuration Tables</title>
      <link>https://databrickslabs.github.io/delta-oms/developer_guide/configurationtables/</link>
      <pubDate>Wed, 04 Aug 2021 14:27:39 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/developer_guide/configurationtables/</guid>
      <description>Configuration Tables Source Config Default Name : sourceconfig
Table used for adding databases/paths/individual table to be tracked by DeltaOMS
   Column Type Description     path String Path to the Delta object to be tracked by DeltaOMS. Could be a database (all tables will be included), directory, individual table or specific path   skipProcessing Boolean Flag to exclude processing a row   parameters Map&amp;lt;String,String&amp;gt; Placeholder for dynamic parameters to be passed to DeltaOMS (supports easy future expansion).</description>
    </item>
    
    <item>
      <title>Data Tables</title>
      <link>https://databrickslabs.github.io/delta-oms/developer_guide/datatables/</link>
      <pubDate>Wed, 04 Aug 2021 14:27:39 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/developer_guide/datatables/</guid>
      <description>Data Tables Raw Actions Default Name : rawactions
Stores the raw actions captured through the ingestion of the _delta_log json files for all tracked tables. The schema has the columns matching the Actions from here(https://github.com/delta-io/delta/blob/master/core/src/main/scala/org/apache/spark/sql/delta/actions/actions.scala#L515) and the Delta Log Protocol with the following additional fields :
   Column Type Description     file_name String Name of the Delta log transaction json file. Eg. - dbfs:/user/hive/warehouse/sample.db/table1/_delta_log/00000000000000000025.json   path String Path to the Delta table.</description>
    </item>
    
    <item>
      <title>Execution</title>
      <link>https://databrickslabs.github.io/delta-oms/faq/execution/</link>
      <pubDate>Wed, 04 Aug 2021 14:26:55 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/faq/execution/</guid>
      <description>Execution Q. How do I get started ?
Please refer to the Getting Started guide
Q. How do I add databases to be monitored by DeltaOMS ?
You can add a database name to the DeltaOMS configuration table (by default called sourceconfig) using simple SQL INSERT statement.
Example:
INSERT INTO &amp;lt;omsDBName&amp;gt;.sourceconfig VALUES(&#39;&amp;lt;Database Name&amp;gt;&#39;,false, Map(&#39;wildCardLevel&#39;,&#39;0&#39;))
For more details on the configurations and parameters, refer to Getting Started and Developer Guide
Q. What components will to be deployed for DeltaOMS ?</description>
    </item>
    
    <item>
      <title>Pre-Requisites</title>
      <link>https://databrickslabs.github.io/delta-oms/getting_started/prerequisites/</link>
      <pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/getting_started/prerequisites/</guid>
      <description>Prerequisites Make sure you have the following available before proceeding :
 Access to Databricks environment with access to Delta tables/databases Ability to create Databricks job and run them on new cluster Proper access permissions to create database, tables and write data to the desired OMS location Procured the Delta OMS solution package from your Databricks team (includes DeltaOMS jar , sample notebooks and documentations) Databricks Runtime 8.3+  </description>
    </item>
    
    <item>
      <title>Data Model</title>
      <link>https://databrickslabs.github.io/delta-oms/developer_guide/datamodels/</link>
      <pubDate>Wed, 04 Aug 2021 14:27:39 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/developer_guide/datamodels/</guid>
      <description>Data Model </description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>https://databrickslabs.github.io/delta-oms/getting_started/setup/</link>
      <pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/getting_started/setup/</guid>
      <description>Setup Initialize the DeltaOMS Database DeltaOMS can be configured through two methods :
 Command line parameters - Limited to few basic mandatory configurations Configuration file - Access to all the configuration options. Refer to Additional Configurations section below for full details  For this tutorial we will use the first option.Follow the below steps to initialize the DeltaOMS centralized Database and tables.
  Import and Open the DeltaOMS Setup notebook STEP 1 into your Databricks environment</description>
    </item>
    
    <item>
      <title>Key Components</title>
      <link>https://databrickslabs.github.io/delta-oms/developer_guide/components/</link>
      <pubDate>Wed, 04 Aug 2021 14:27:39 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/developer_guide/components/</guid>
      <description>Key Components Initialization DeltaOMS provides the component com.databricks.labs.deltaoms.init.InitializeOMS for initializing
the centralized OMS database. The component creates the OMS DB at the location specified by the configuration settings. Note: This process will delete all existing data in the specified location.
   Configuration Key Command Line Argument Description Required Example Default Value     base-location &amp;ndash;baseLocation= Base location/path of the OMS Database on the Delta Lake Y dbfs:/spark-warehouse/oms.</description>
    </item>
    
    <item>
      <title>Execute</title>
      <link>https://databrickslabs.github.io/delta-oms/getting_started/execute/</link>
      <pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/getting_started/execute/</guid>
      <description>Execute Execute the DeltaOMS Jobs You can run the jobs created in the above step to ingest and process the delta transaction information for the configured tables into the centralized DeltaOMS database.
By default, the OMS_Streaming_Ingestion_* jobs bring in the raw delta logs from the configured databases/tables. The OMS_ProcessRawActions* job formats and enrich the raw delta log data.
For more details refer to the Developer Guide</description>
    </item>
    
    <item>
      <title>Analyze</title>
      <link>https://databrickslabs.github.io/delta-oms/getting_started/analyze/</link>
      <pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/getting_started/analyze/</guid>
      <description>Analyze Run analytics using sample notebooks You can run some sample analytics on the data from the OMS database using the provided notebook
Modify the queries to reflect your configuration for OMS DB Name and other table names.
Executing this notebook will give you an idea on the type of analysis and data structure that can be utilized as part of the DeltaOMS.
You can build on top of this notebook , customize this notebook to your liking and create your own Analytics insights and dashboards through Databricks notebooks and/or SQL Analytics.</description>
    </item>
    
    <item>
      <title>Additional Configuration</title>
      <link>https://databrickslabs.github.io/delta-oms/getting_started/additionalconfigurations/</link>
      <pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate>
      
      <guid>https://databrickslabs.github.io/delta-oms/getting_started/additionalconfigurations/</guid>
      <description>Additional Configurations and Execution Options Configuration DeltaOMS can also be configured using a HOCON format file. The different configuration parameters available are described below :
   Configuration Key Description Required Example Default Value     base-location Base location/path of the OMS Database on the Delta Lake Y dbfs:/spark-warehouse/oms.db None   db-name OMS Database Name. This is the database where all the Delta log details will be collected Y oms.</description>
    </item>
    
  </channel>
</rss>
